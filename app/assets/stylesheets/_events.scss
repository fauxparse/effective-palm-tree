.event-details {
  header {
    align-items: flex-start;
    display: flex;
    flex: 0 0 (2 * $sizing-increment);
    padding-bottom: 0;
    padding-right: 0;
    padding-left: var(--metric-keyline);
    position: relative;

    > div {
      align-self: stretch;
      display: flex;
      flex: 1;
      flex-direction: column;
      justify-content: space-between;
    }

    [role="tablist"] {
      margin-left: -1rem;
    }

    h2 {
      font-size: $base-font-size;
      font-weight: $base-font-weight;
      margin: 0;
      padding: 0.5em 0;

      b {
        @include ellipsis;
        display: block;
        font-size: $large-font-size;
        font-weight: $light-font-weight;
        line-height: 1.5rem;
      }

      small {
        @include ellipsis;
        color: $secondary-font-color;
        display: block;
        font-size: $small-font-size;
        line-height: 1.5rem;
        text-transform: uppercase;
      }
    }
  }

  [role="tabpanel"] {
    flex: 1;
    overflow-y: auto;
  }
}

.my-availability {
  background: $oc-yellow-0;
  flex: 0;
  margin: 0;
  padding: 0.5em 0;
  position: relative;
  transition: all $slow-duration $base-timing;

  p {
    line-height: 1.5rem;
    margin: 0;
    transition: all $slow-duration $base-timing;
  }

  .instructions {
    text-align: center;
    transition-delay: $slow-duration;
  }

  .buttons {
    align-items: center;
    display: flex;
    flex-direction: row;
    justify-content: center;
    margin: 0;
    transition: all $slow-duration $base-timing;

    button {
      @include size(2rem);
      background: none;
      border-radius: 50%;
      margin: 0.5rem;
      outline: none;
      padding: 0;
      position: relative;
      transition: all $slow-duration $base-timing $base-duration;

      svg {
        @include size(2rem);
        display: block;
        margin: 0;

        circle,
        path {
          fill: none;
          stroke: $secondary-font-color;
          stroke-width: 1px;
        }

        circle {
          fill: white;
          opacity: 0.75;
          transition: opacity $slow-duration $base-timing $base-duration;
        }
      }

      &[rel="yes"] path {
        stroke: $green;
      }

      &[rel="no"] path {
        stroke: $red;
      }

      &::after {
        @include size(3rem);
        @include position(absolute, -0.5rem -0.5rem -0.5rem -0.5rem);
        border-radius: 50%;
        content: "";
      }
    }
  }

  .status {
    @include position(absolute, 1.5rem $keyline null $keyline);
    @include ellipsis;
    align-items: center;
    display: flex;
    height: 4rem;
    justify-content: space-between;
    opacity: 0;
    pointer-events: none;
    transform: translateX(-50%);
  }

  &[data-availability="true"],
  &[data-availability="false"] {
    margin-bottom: -1.5rem;
    transform: translateY(-1.5rem);
    transition-delay: $base-duration;

    .buttons {
      transition-delay: $base-duration;

      button {
        circle {
          opacity: 0;
        }
      }
    }

    .instructions {
      opacity: 0;
      transform: translateY(-100%);
      transition-delay: 0;
    }

    .status {
      opacity: 1;
      transform: translateX(0%);
      transition-delay: $medium-duration;
    }
  }

  &[data-availability="true"] {
    .buttons {
      transform: translateX(calc(50% - 0.25rem));
    }

    [rel="no"] {
      opacity: 0;
      transform: translateX(-3rem);
    }
  }

  &[data-availability="false"] {
    .buttons {
      transform: translateX(calc(50% - 3.25rem));
    }

    [rel="yes"] {
      opacity: 0;
      transform: translateX(3rem);
    }
  }
}

.event-availability {
  display: flex;
  flex-direction: column;

  .members {
    flex: 1;
    margin-left: var(--metric-keyline);
    padding: 0.5rem 0;

    @include media($large-screen) {
      margin-right: var(--metric-keyline);
    }

    li {
      align-items: center;
      display: flex;
      margin-left: -4.5rem;
      padding: 0.5rem 1rem;
    }

    .name {
      flex: 1;
      color: $secondary-font-color;
      transition: color $base-duration $base-timing;
      margin-left: ($keyline - 3rem);
    }

    .avatar {
      opacity: 0.5;
      transition: opacity $base-duration $base-timing;
    }

    .available .name {
      color: $base-font-color;
    }

    .available .avatar {
      opacity: 1;
    }

    button {
      @include touch-target;
      background: none;
      margin: 0;
      outline: none;
      padding: 0;

      svg {
        display: block;
      }
    }
  }
}

.event-roles {
  display: flex;
  flex-direction: column;

  > ul {
    flex: 1;
    margin: 0 ;
    overflow-y: auto;

    @include media($large-screen) {
      margin-left: calc(var(--metric-keyline) - 3.5em);
      margin-right: var(--metric-keyline);
    }

    &.settling .allocation {
      transition-property: opacity, box-shadow;

      &.dragging {
        box-shadow: none;
      }
    }
  }

  footer {
    border-top: $base-border;
    flex: 0 0 $sizing-increment;
    justify-content: space-between;
    padding: 0.5em var(--metric-keyline);
  }

  .allocation {
    display: flex;
    margin: 0;
    padding: 0.5em;
    position: relative;
    transition: all $base-duration $base-timing;

    &.dragging {
      background: $base-background-color;
      box-shadow: 0 0 0.5em rgba(black, 0.15);
      opacity: 0.95;
      transition-property: opacity, box-shadow;
      user-select: none;
      z-index: 1;
    }

    .drag-handle {
      @include size($button-size);
      cursor: row-resize;
      margin: 0 0.5em 0 0;
      padding: 0.5em;
      touch-action: none;

      svg {
        display: block;
        fill: none;
        stroke: $secondary-font-color;
        stroke-width: 1px;
      }
    }

    .select {
      flex-shrink: 1;
      margin-right: 1em;

      &:nth-of-type(2) {
        flex: 1;
      }
    }

    .icon-button {
      margin: 0 0 0 -0.5em;
      color: $secondary-font-color;
    }

    &:first-child:last-child {
      .drag-handle {
        display: none;
      }
    }
  }
}

.allocation-range {
  padding: 0.5em 1em;

  .slider {
    position: relative;
    width: 12em;

    .track {
      display: block;
      height: 1.5em;

      .range,
      &:before {
        @include position(absolute, 50% 0 null 0);
        border: none;
        border-top: 2px solid $base-border-color;
        content: "";
        height: 0;
        margin: -1px 0;
      }

      .range {
        border-top-color: $accent-color;
        transition: all $base-duration $base-timing;
      }
    }

    .selection {
      @include position(absolute, 0 0 0 0);
      filter: url('#slider-goo');
      transform: translate3d(0, 0, 0);
    }

    .thumb {
      @include position(absolute, 50% null null null);
      cursor: pointer;
      z-index: 1;

      &::before,
      &::after {
        @include position(absolute, 50% null null 50%);
        border-radius: 50%;
        content: "";
      }

      &::before {
        @include size($button-size);
        margin: ($button-size / -2);
        z-index: 1;
      }

      &::after {
        @include size(1em);
        background: $accent-color;
        margin: -0.5em;
        transform: scale(0.75);
        transition: transform $base-duration $ease-in-back;
        z-index: 2;
      }

      &.pressed::after {
        transform: scale(1);
        transition-timing-function: $ease-out-back;
      }

      &:not(.pressed) {
        transition: left $base-duration $base-timing;
      }

      &.pressed ~ .range {
        transition: none;
      }
    }
  }
}

.event-assignments {
  display: flex;
  flex: 1;
  flex-direction: column;

  .assignments {
    flex: 1;
    overflow-y: auto;
    padding-bottom: $sizing-increment;
    user-select: none;

    section {
      padding: 0.5em 0;
      margin-left: var(--metric-keyline);

      &:not(:first-child) {
        border-top: $base-border;
      }

      h4 {
        @include ellipsis;
        color: $secondary-font-color;
        display: flex;
        font-size: $small-font-size;
        font-weight: $base-font-weight;
        justify-content: space-between;
        line-height: 1.5rem;
        margin: 0 1rem 0.5rem 0;
        text-transform: uppercase;

        small {
          font-size: $tiny-font-size;
        }
      }

      li {
        align-items: center;
        display: flex;
        margin-left: -4.5rem;
        padding: 0.5em 1em;
        transform-origin: 50% 0%;
        transition: all $base-duration $base-timing;

        @include media($large-screen) {
          padding-right: var(--metric-keyline);
        }

        .action {
          cursor: grab;
          flex: 0 0 2em;
          margin-right: calc(#{$keyline} - 3em);
          position: relative;
          touch-action: none;

          .avatar {
            @include size(2em);
            display: block;
          }
        }

        .name {
          @include ellipsis;
          flex: 1;
        }
      }

      .checkbox {
        display: block;
        margin: 0.25em;

        circle, path {
          fill: none;
          stroke: $secondary-font-color;
          stroke-width: 1px;
        }

        path {
          stroke-dasharray: 17px;
          stroke-dashoffset: 17px;
        }

        &.checked {
          circle {
            fill: $accent-color;
            stroke: $accent-color;
          }

          path {
            stroke: white;
            stroke-dashoffset: 0;
            transition: stroke-dashoffset $base-duration $base-timing $base-duration;
          }
        }
      }

      .avatar.available,
      .avatar.unavailable,
      .avatar.unknown {
        padding: 0.25em;
      }

      .avatar.available path { stroke: $green; }
      .avatar.unavailable path { stroke: $red; }

      &.none:not(.show-all) li:not(.available) {
        margin-bottom: -3em;
        opacity: 0;
        transform: rotateX(90deg);
      }
    }
  }

  &.dragging .assignments {
    touch-action: none;
    pointer-events: none;
  }

  .drop-targets {
    @include position(fixed, 0 0 0 0);
    align-items: stretch;
    background: rgba(white, 0.85);
    cursor: grabbing;
    display: flex;
    flex-direction: column;
    opacity: 0;
    pointer-events: none;
    transition: opacity $base-duration $base-timing;
  }

  &.dragging .drop-targets {
    opacity: 1;
    pointer-events: auto;
  }

  .drop-targets::before,
  .drop-targets::after {
    content: "";
    flex: 1;
  }

  .drop-target {
    align-items: center;
    display: flex;
    flex: 1 0 $sizing-increment;
    justify-content: center;
    max-height: $sizing-increment * 3;
    user-select: none;

    h4 {
      color: $base-font-color;
      display: flex;
      align-items: center;
      font-weight: $light-font-weight;
      letter-spacing: 0.2em;
      margin: 0;
      opacity: 0.75;
      text-transform: uppercase;
      transition: all $base-duration $base-timing;

      svg + span {
        margin-left: 1em;
      }

      span {
        display: none;
      }

      @include media($medium-screen) {
        span {
          display: block;
        }
      }
    }

    circle, path {
      fill: none;
      stroke: $base-font-color;
      stroke-width: 1px;
    }

    &.hover h4 {
      opacity: 1;
      transform: scale(1.5);
    }
  }

  .drop-targets footer {
    align-items: stretch;
    display: flex;
    flex: 1 0 $sizing-increment;
    flex-direction: row;
    justify-content: center;
    order: 1;

    .drop-target {
      flex: 1;
      max-height: auto;
      max-width: 20em;
    }
  }

  .draggables {
    @include position(fixed, 0 null null 0);
    pointer-events: none;
    transform: translate3d(0, 0, 0);
    user-select: none;
    z-index: 10;

    &.multiple {
      filter: url('#goo');
    }

    &::before {
      @include position(absolute, -100vh -100vw -100vh -100vw);
      content: "";
    }
  }

  .draggable {
    position: absolute;
    left: 0;
    top: 0;
    @include size($button-size);
    margin: ($button-size / -2);
    background: $accent-color;
    border-radius: 50%;
    transition: transform 0.5s $ease-out-back;

    @for $i from 1 through 10 {
      &:nth-of-type(#{$i}) {
        transition-delay: ($i * 30ms);
      }
    }

    .icon-avatar {
      margin: 0.25em;

      path {
        stroke: white;
      }
    }

    .icon-admin {
      display: none;
    }
  }
}
